name: run all tests
# either manually started, or on a schedule
on:
    push
jobs:

  install:
    env:
        MAGIC_VERSION:          8.3.209
        NETGEN_VERSION:         1.5.205
        PDK_ROOT:               /home/runner/pdk
        OPENLANE_ROOT:          /home/runner/openlane
        CARAVEL_ROOT:           /home/runner/caravel_user_project/caravel
        USER_PROJECT_COMMIT:    mpw-3
        SKYWATER_COMMIT:        c094b6e83a4f9298e47f696ec5a7fd53535ec5eb
        OPEN_PDKS_COMMIT:       14db32aa8ba330e88632ff3ad2ff52f4f4dae1ad
        CARAVEL_COMMIT:         5712871d27c08900d18edc72a7f534cc8be1b2dd
        OPENLANE_TAG:           mpw-3a
        OPENLANE_IMAGE_NAME:    efabless/openlane:mpw-3a

    # ubuntu
    runs-on: ubuntu-latest
    steps:

    # checkout the repo to get the scripts
    - uses: actions/checkout@v2

    # checkout multi_project tools
    - uses: actions/checkout@v2
      with:
          repository: mattvenn/multi_project_tools
          path: ./multi_project_tools

    # multi project tools python deps
    - name: install python deps
      run: pip3 install -r ./multi_project_tools/requirements.txt

    # install oss suite
    - name: install oss suite
      run: |
        bash ${GITHUB_WORKSPACE}/.github/scripts/install_oss_suite.sh
        echo ${GITHUB_WORKSPACE}/oss-cad-suite/bin >> $GITHUB_PATH

    - name: test yosys
      run: yosys --version

    # install riscv
    - name: install RISCV
      run: |
        bash ${GITHUB_WORKSPACE}/.github/scripts/install_riscv_gcc.sh
        echo ${GITHUB_WORKSPACE}/riscv64-unknown-elf-gcc-8.3.0-2020.04.1-x86_64-linux-ubuntu14/bin >> $GITHUB_PATH

    - name: test RISCV
      run: riscv64-unknown-elf-gcc --version

    # PDK dependencies we can install from package manager
    - name: install deps
      run: sudo apt-get install -y tcsh csh tcl-dev tk-dev libcairo2-dev

    # netgen dependency
    - name: install netgen
      run: bash ${GITHUB_WORKSPACE}/.github/scripts/install_netgen.sh

    # magic dependency
    - name: install magic
      run: bash ${GITHUB_WORKSPACE}/.github/scripts/install_magic.sh

    # install the PDK, OpenLane
    - name: install PDK & OpenLane
      run: bash ${GITHUB_WORKSPACE}/.github/scripts/install_pdk.sh

    # check pdk path
    - name: check pdk
      run: |
        ls $PDK_ROOT
        ls $PDK_ROOT/sky130A/libs.ref/sky130_fd_sc_hd/verilog/primitives.v

    # test multi project tools
    # not git-test as it will fail while on actions branch
    - name: test multi tools
      run: |
        ls /home/runner/caravel_user_project/caravel/openlane/user_project_wrapper
        cd ./multi_project_tools
        ./multi_tool.py --local ${GITHUB_WORKSPACE}/.github/scripts/github_local.yaml --config ${GITHUB_WORKSPACE}/.github/scripts/projects.yaml --clone-shared --clone-repos
        ./multi_tool.py --local ${GITHUB_WORKSPACE}/.github/scripts/github_local.yaml --config ${GITHUB_WORKSPACE}/.github/scripts/projects.yaml --create-openlane-config --copy-project --openram
        ./multi_tool.py --local ${GITHUB_WORKSPACE}/.github/scripts/github_local.yaml --config ${GITHUB_WORKSPACE}/.github/scripts/projects.yaml --test-gds
        ./multi_tool.py --local ${GITHUB_WORKSPACE}/.github/scripts/github_local.yaml --config ${GITHUB_WORKSPACE}/.github/scripts/projects.yaml --test-module
        ./multi_tool.py --local ${GITHUB_WORKSPACE}/.github/scripts/github_local.yaml --config ${GITHUB_WORKSPACE}/.github/scripts/projects.yaml --prove-wrapper
        ./multi_tool.py --local ${GITHUB_WORKSPACE}/.github/scripts/github_local.yaml --config ${GITHUB_WORKSPACE}/.github/scripts/projects.yaml --test-tristate
        ./multi_tool.py --local ${GITHUB_WORKSPACE}/.github/scripts/github_local.yaml --config ${GITHUB_WORKSPACE}/.github/scripts/projects.yaml --test-lvs --force
        ./multi_tool.py --local ${GITHUB_WORKSPACE}/.github/scripts/github_local.yaml --config ${GITHUB_WORKSPACE}/.github/scripts/projects.yaml --test-ports
        ./multi_tool.py --local ${GITHUB_WORKSPACE}/.github/scripts/github_local.yaml --config ${GITHUB_WORKSPACE}/.github/scripts/projects.yaml --test-caravel

